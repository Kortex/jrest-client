name: JRest Client CI

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

defaults:
  run:
    shell: bash

jobs:
  validate-wrapper:
    name: "Validate Gradle wrapper"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

  build:
    name: "Build project"
    runs-on: ubuntu-20.04
    needs: validate-wrapper
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'
      - name: Build project
        run: ./gradlew assemble

  test:
    name: "Test project"
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        stage: [test, integrationTest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'
      - name: Run ${{matrix.stage}}s
        run: ./gradlew ${{ matrix.stage }} --scan
      - name: Upload ${{ matrix.stage }} report
        uses: actions/upload-artifact@v2
        with:
          name: Test results for ${{ matrix.stage }} stage
          path: build/test-results/${{ matrix.stage }}/*.xml
        if: always()

  publish-test-results:
    name: "Publish test reports"
    runs-on: ubuntu-20.04
    if: success() || failure()
    needs: test
    steps:
      - name: Fetch Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml

  jar:
    name: "Create project jar"
    runs-on: ubuntu-20.04
    needs: [ build, test ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'
      - name: Build Jar
        run: ./gradlew jar
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: jrest-client-jar
          path: build/libs/*.jar
          retention-days: 7
