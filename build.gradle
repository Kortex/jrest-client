plugins {
    id 'java'
    id 'application'
    id 'com.softeq.gradle.itest' version '1.0.4'
    id "com.adarshr.test-logger" version "3.0.0"
    id 'jacoco'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 11
targetCompatibility = 11

version = "1.0.0-SNAPSHOT"

application {
    mainClassName = "com.ariskourt.restclient.RestClient"
}

itestSourceSet {
    name = "integrationTest"
    compileClasspath = sourceSets.main.compileClasspath + sourceSets.main.output
    runtimeClasspath = sourceSets.main.runtimeClasspath + sourceSets.main.output
}

def JUNIT_JUPITER_VERSION = "5.7.2"
def JACKSON_VERSION = "2.12.4"

dependencies {

    /*** LOG4J ***/
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.14.1'

    /*** JACKSON ***/
    implementation "com.fasterxml.jackson.core:jackson-core:${JACKSON_VERSION}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${JACKSON_VERSION}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${JACKSON_VERSION}"

    /*** APACHE ***/
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'

    /*** TEST DEPENDENCIES ***/
    testImplementation "org.junit.jupiter:junit-jupiter-api:${JUNIT_JUPITER_VERSION}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${JUNIT_JUPITER_VERSION}"
    testImplementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.14.1'
    testImplementation 'org.mockito:mockito-core:3.12.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.12.1'
    testImplementation 'org.assertj:assertj-core:3.20.2'
    testImplementation 'org.awaitility:awaitility:4.1.0'

    itestImplementation "org.junit.jupiter:junit-jupiter-api:${JUNIT_JUPITER_VERSION}"
    itestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${JUNIT_JUPITER_VERSION}"
    itestImplementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.14.1'
    itestImplementation 'org.assertj:assertj-core:3.20.2'

}

/* Parallelize Test Execution */
tasks.withType(Test) {
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

integrationTest {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

testlogger {
    theme 'mocha'
    showExceptions true
    showStackTraces true
    showFullStackTraces false
    showCauses true
    slowThreshold 500
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showStandardStreams false
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
    }
}